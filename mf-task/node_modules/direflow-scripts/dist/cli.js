"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var child_process_1 = require("child_process");
var path_1 = require("path");
var chalk_1 = __importDefault(require("chalk"));
var messages_1 = require("./helpers/messages");
var env = __assign({}, process.env);
env.SKIP_PREFLIGHT_CHECK = 'true';
function cli(args) {
    var command = args[0], restArgs = args.slice(1);
    switch (command) {
        case 'start':
            start();
            break;
        case 'test':
            test(restArgs);
            break;
        case 'build':
            build(restArgs);
            break;
        case 'build:lib':
            buildLib(restArgs);
            break;
        default:
            console.log('No arguments provided.');
    }
}
exports.default = cli;
function start() {
    child_process_1.spawn('react-app-rewired', ['start'], {
        shell: true,
        stdio: 'inherit',
        env: env,
    });
}
function test(args) {
    child_process_1.spawn('react-app-rewired', __spreadArrays(['test', '--env=jest-environment-jsdom-fourteen'], args), {
        shell: true,
        stdio: 'inherit',
        env: env,
    });
}
function build(args) {
    child_process_1.spawn('react-app-rewired', __spreadArrays(['build'], args), {
        shell: true,
        stdio: 'inherit',
        env: env,
    });
}
function buildLib(args) {
    var _a;
    console.log('Building React component library...');
    var webpack;
    if (args[0] === '--verbose') {
        webpack = child_process_1.spawn('webpack', ['--config', path_1.resolve(__dirname, '../webpack.config.js')], {
            shell: true,
            stdio: 'inherit',
            env: env,
        });
    }
    else {
        webpack = child_process_1.spawn('webpack', ['--config', path_1.resolve(__dirname, '../webpack.config.js')]);
    }
    (_a = webpack.stdout) === null || _a === void 0 ? void 0 : _a.on('data', function (data) {
        if (data.toString().includes('ERROR')) {
            console.log(chalk_1.default.red('An error occured during the build!'));
            console.log(chalk_1.default.red(data.toString()));
        }
    });
    webpack.on('exit', function (code) {
        if (code !== 0) {
            console.log(messages_1.interupted());
            return;
        }
        console.log(messages_1.succeeded());
    });
}
