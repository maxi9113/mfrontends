import React from 'react';
import { createPortal } from 'react-dom';
const Portal = (props) => {
    const targetElement = props.targetElement;
    return createPortal(props.children, targetElement);
};
const createProxyComponent = (options) => {
    const ShadowRoot = (props) => {
        const shadowedRoot = options.webComponent.shadowRoot
            || options.webComponent.attachShadow({ mode: options.mode });
        options.shadowChildren.forEach((child) => {
            shadowedRoot.appendChild(child);
        });
        return React.createElement(Portal, { targetElement: shadowedRoot }, props.children);
    };
    return ShadowRoot;
};
const componentMap = new WeakMap();
const createProxyRoot = (webComponent, shadowChildren) => {
    return new Proxy({ open: null, closed: null }, {
        get(_, mode) {
            if (componentMap.get(webComponent)) {
                return componentMap.get(webComponent);
            }
            const proxyComponent = createProxyComponent({ webComponent, mode, shadowChildren });
            componentMap.set(webComponent, proxyComponent);
            return proxyComponent;
        },
    });
};
export default createProxyRoot;
