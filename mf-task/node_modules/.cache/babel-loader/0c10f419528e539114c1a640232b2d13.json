{"ast":null,"code":"export const injectIntoShadowRoot = (webComponent, element) => {\n  const elementToPrepend = webComponent.shadowRoot || webComponent;\n\n  if (existsIdenticalElement(element, elementToPrepend)) {\n    return;\n  }\n\n  elementToPrepend.prepend(element);\n};\nexport const injectIntoHead = element => {\n  if (existsIdenticalElement(element, document.head)) {\n    return;\n  }\n\n  document.head.append(element);\n};\nexport const stripStyleFromHead = styleId => {\n  const allChildren = document.head.children;\n  const style = Array.from(allChildren).find(child => child.id === styleId);\n\n  if (style) {\n    document.head.removeChild(style);\n  }\n};\nexport const existsIdenticalElement = (element, host) => {\n  const allChildren = host.children;\n  const exists = Array.from(allChildren).some(child => element.isEqualNode(child));\n  return exists;\n};","map":{"version":3,"sources":["/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/direflow-component/dist/helpers/domControllers.js"],"names":["injectIntoShadowRoot","webComponent","element","elementToPrepend","shadowRoot","existsIdenticalElement","prepend","injectIntoHead","document","head","append","stripStyleFromHead","styleId","allChildren","children","style","Array","from","find","child","id","removeChild","host","exists","some","isEqualNode"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC3D,QAAMC,gBAAgB,GAAGF,YAAY,CAACG,UAAb,IAA2BH,YAApD;;AACA,MAAII,sBAAsB,CAACH,OAAD,EAAUC,gBAAV,CAA1B,EAAuD;AACnD;AACH;;AACDA,EAAAA,gBAAgB,CAACG,OAAjB,CAAyBJ,OAAzB;AACH,CANM;AAOP,OAAO,MAAMK,cAAc,GAAIL,OAAD,IAAa;AACvC,MAAIG,sBAAsB,CAACH,OAAD,EAAUM,QAAQ,CAACC,IAAnB,CAA1B,EAAoD;AAChD;AACH;;AACDD,EAAAA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBR,OAArB;AACH,CALM;AAMP,OAAO,MAAMS,kBAAkB,GAAIC,OAAD,IAAa;AAC3C,QAAMC,WAAW,GAAGL,QAAQ,CAACC,IAAT,CAAcK,QAAlC;AACA,QAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWJ,WAAX,EAAwBK,IAAxB,CAA8BC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaR,OAArD,CAAd;;AACA,MAAIG,KAAJ,EAAW;AACPP,IAAAA,QAAQ,CAACC,IAAT,CAAcY,WAAd,CAA0BN,KAA1B;AACH;AACJ,CANM;AAOP,OAAO,MAAMV,sBAAsB,GAAG,CAACH,OAAD,EAAUoB,IAAV,KAAmB;AACrD,QAAMT,WAAW,GAAGS,IAAI,CAACR,QAAzB;AACA,QAAMS,MAAM,GAAGP,KAAK,CAACC,IAAN,CAAWJ,WAAX,EAAwBW,IAAxB,CAA8BL,KAAD,IAAWjB,OAAO,CAACuB,WAAR,CAAoBN,KAApB,CAAxC,CAAf;AACA,SAAOI,MAAP;AACH,CAJM","sourcesContent":["export const injectIntoShadowRoot = (webComponent, element) => {\n    const elementToPrepend = webComponent.shadowRoot || webComponent;\n    if (existsIdenticalElement(element, elementToPrepend)) {\n        return;\n    }\n    elementToPrepend.prepend(element);\n};\nexport const injectIntoHead = (element) => {\n    if (existsIdenticalElement(element, document.head)) {\n        return;\n    }\n    document.head.append(element);\n};\nexport const stripStyleFromHead = (styleId) => {\n    const allChildren = document.head.children;\n    const style = Array.from(allChildren).find((child) => child.id === styleId);\n    if (style) {\n        document.head.removeChild(style);\n    }\n};\nexport const existsIdenticalElement = (element, host) => {\n    const allChildren = host.children;\n    const exists = Array.from(allChildren).some((child) => element.isEqualNode(child));\n    return exists;\n};\n"]},"metadata":{},"sourceType":"module"}