{"ast":null,"code":"var _jsxFileName = \"/home/max-valeta/Documents/ALTO/react/mf-task/src/direflow-components/mf-task/App.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { EventContext, Styled } from 'direflow-component';\nimport styles from './App.css'; ////contexts////\n\nimport Provider from '../provider/index';\nimport Tasks from '../mf-task/components/index';\n\nconst App = props => {\n  //   const dispatch = useContext(EventContext);\n  // const handleClick = () => {\n  //   const event = new Event('my-event');\n  //   dispatch(event);\n  // };\n  return /*#__PURE__*/React.createElement(Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Styled, {\n    styles: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tasks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }\n  }))))));\n};\n\nApp.defaultProps = {\n  componentTitle: 'Mf Task',\n  sampleList: ['Create with React', 'Build as Web Component', 'Use it anywhere!']\n};\nApp.propTypes = {\n  componentTitle: PropTypes.string,\n  sampleList: PropTypes.array\n};\nexport default App;","map":{"version":3,"sources":["/home/max-valeta/Documents/ALTO/react/mf-task/src/direflow-components/mf-task/App.js"],"names":["React","useContext","PropTypes","EventContext","Styled","styles","Provider","Tasks","App","props","defaultProps","componentTitle","sampleList","propTypes","string","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,oBAArC;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;;AAEC,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACxB;AAEE;AACA;AACA;AACA;AAGA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEJ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAM,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN,CADF,CADF,CADF,CADF,CADF;AAWD,CApBA;;AAsBDG,GAAG,CAACE,YAAJ,GAAmB;AACjBC,EAAAA,cAAc,EAAE,SADC;AAEjBC,EAAAA,UAAU,EAAE,CACV,mBADU,EAEV,wBAFU,EAGV,kBAHU;AAFK,CAAnB;AASAJ,GAAG,CAACK,SAAJ,GAAgB;AACdF,EAAAA,cAAc,EAAET,SAAS,CAACY,MADZ;AAEdF,EAAAA,UAAU,EAAEV,SAAS,CAACa;AAFR,CAAhB;AAKA,eAAeP,GAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { EventContext, Styled } from 'direflow-component';\nimport styles from './App.css';\n////contexts////\nimport Provider from '../provider/index'\nimport Tasks from '../mf-task/components/index';\n\n const App = (props) => {\n//   const dispatch = useContext(EventContext);\n\n  // const handleClick = () => {\n  //   const event = new Event('my-event');\n  //   dispatch(event);\n  // };\n\n\n  return (\n    <Provider>     \n      <Styled styles={styles}>   \n        <div className='app'>          \n          <div >           \n            <div ><Tasks/></div>     \n          </div>\n        </div>\n      </Styled>\n    </Provider>\n  );\n};\n\nApp.defaultProps = {\n  componentTitle: 'Mf Task',\n  sampleList: [\n    'Create with React',\n    'Build as Web Component',\n    'Use it anywhere!',\n  ],\n}\n\nApp.propTypes = {\n  componentTitle: PropTypes.string,\n  sampleList: PropTypes.array,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}