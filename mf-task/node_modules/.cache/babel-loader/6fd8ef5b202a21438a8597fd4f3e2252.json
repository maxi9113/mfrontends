{"ast":null,"code":"import _inherits from \"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _slicedToArray from \"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/* eslint-disable class-methods-use-this */\n\n/* eslint-disable max-classes-per-file */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport clonedeep from 'lodash.clonedeep';\nimport createProxyRoot from './helpers/proxyRoot';\nimport { EventProvider } from './components/EventContext';\nimport registeredPlugins from './plugins/plugins';\n\nvar WebComponentFactory = /*#__PURE__*/function () {\n  function WebComponentFactory(componentProperties, rootComponent, shadow, plugins, connectCallback) {\n    _classCallCheck(this, WebComponentFactory);\n\n    this.componentProperties = componentProperties;\n    this.rootComponent = rootComponent;\n    this.shadow = shadow;\n    this.plugins = plugins;\n    this.connectCallback = connectCallback;\n    this.componentAttributes = {};\n    this.reflectPropertiesToAttributes();\n  }\n  /**\n   * All properties with primitive values are added to attributes.\n   */\n\n\n  _createClass(WebComponentFactory, [{\n    key: \"reflectPropertiesToAttributes\",\n    value: function reflectPropertiesToAttributes() {\n      var _this = this;\n\n      Object.entries(this.componentProperties).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        if (typeof value !== 'number' && typeof value !== 'string' && typeof value !== 'boolean') {\n          return;\n        }\n\n        _this.componentAttributes[key] = value;\n      });\n    }\n    /**\n     * Create new class that will serve as the Web Component.\n     */\n\n  }, {\n    key: \"create\",\n    value: function create() {\n      var factory = this;\n      return /*#__PURE__*/function (_HTMLElement) {\n        _inherits(WebComponent, _HTMLElement);\n\n        var _super = _createSuper(WebComponent);\n\n        function WebComponent() {\n          var _this2;\n\n          _classCallCheck(this, WebComponent);\n\n          _this2 = _super.call(this);\n          _this2.initialProperties = clonedeep(factory.componentProperties);\n          _this2.properties = {};\n          _this2.hasConnected = false;\n          /**\n           * Dispatch an event from the Web Component\n           */\n\n          _this2.eventDispatcher = function (event) {\n            _this2.dispatchEvent(event);\n          };\n\n          _this2.transferInitialProperties();\n\n          _this2.subscribeToProperties();\n\n          return _this2;\n        }\n        /**\n         * Observe attributes for changes.\n         * Part of the Web Component Standard.\n         */\n\n\n        _createClass(WebComponent, [{\n          key: \"connectedCallback\",\n\n          /**\n           * Web Component gets mounted on the DOM.\n           */\n          value: function connectedCallback() {\n            var _a, _b;\n\n            this.mountReactApp({\n              initial: true\n            });\n            this.hasConnected = true;\n            (_b = (_a = factory).connectCallback) === null || _b === void 0 ? void 0 : _b.call(_a, this);\n          }\n          /**\n           * When an attribute is changed, this callback function is called.\n           * @param name name of the attribute\n           * @param oldValue value before change\n           * @param newValue value after change\n           */\n\n        }, {\n          key: \"attributeChangedCallback\",\n          value: function attributeChangedCallback(name, oldValue, newValue) {\n            if (!this.hasConnected) {\n              return;\n            }\n\n            if (oldValue === newValue) {\n              return;\n            }\n\n            this.properties[name] = newValue;\n            this.mountReactApp();\n          }\n          /**\n           * When a property is changed, this callback function is called.\n           * @param name name of the property\n           * @param oldValue value before change\n           * @param newValue value after change\n           */\n\n        }, {\n          key: \"propertyChangedCallback\",\n          value: function propertyChangedCallback(name, oldValue, newValue) {\n            if (!this.hasConnected) {\n              return;\n            }\n\n            if (oldValue === newValue) {\n              return;\n            }\n\n            this.properties[name] = newValue;\n            this.mountReactApp();\n          }\n          /**\n           * Web Component gets unmounted from the DOM.\n           */\n\n        }, {\n          key: \"disconnectedCallback\",\n          value: function disconnectedCallback() {\n            ReactDOM.unmountComponentAtNode(this);\n          }\n          /**\n           * Setup getters and setters for all properties.\n           * Here we ensure that the 'propertyChangedCallback' will get invoked\n           * when a property changes.\n           */\n\n        }, {\n          key: \"subscribeToProperties\",\n          value: function subscribeToProperties() {\n            var _this3 = this;\n\n            var propertyMap = {};\n            Object.keys(this.initialProperties).forEach(function (key) {\n              propertyMap[key] = {\n                configurable: true,\n                enumerable: true,\n                get: function get() {\n                  var currentValue = _this3.properties.hasOwnProperty(key) ? _this3.properties[key] : _this3.initialProperties[key];\n                  return currentValue;\n                },\n                set: function set(newValue) {\n                  var oldValue = _this3.properties.hasOwnProperty(key) ? _this3.properties[key] : _this3.initialProperties[key];\n\n                  _this3.propertyChangedCallback(key, oldValue, newValue);\n                }\n              };\n            });\n            Object.defineProperties(this, propertyMap);\n          }\n          /**\n           * Syncronize all properties and attributes\n           */\n\n        }, {\n          key: \"syncronizePropertiesAndAttributes\",\n          value: function syncronizePropertiesAndAttributes() {\n            var _this4 = this;\n\n            Object.keys(this.initialProperties).forEach(function (key) {\n              if (_this4.properties.hasOwnProperty(key)) {\n                return;\n              }\n\n              if (_this4.getAttribute(key)) {\n                _this4.properties[key] = _this4.getAttribute(key);\n                return;\n              }\n\n              _this4.properties[key] = _this4.initialProperties[key];\n            });\n          }\n          /**\n           * Transfer initial properties from the custom element.\n           */\n\n        }, {\n          key: \"transferInitialProperties\",\n          value: function transferInitialProperties() {\n            var _this5 = this;\n\n            Object.keys(this.initialProperties).forEach(function (key) {\n              if (_this5.hasOwnProperty(key)) {\n                _this5.properties[key] = _this5[key];\n              }\n            });\n          }\n          /**\n           * Apply plugins\n           */\n\n        }, {\n          key: \"applyPlugins\",\n          value: function applyPlugins(application) {\n            var _this6 = this;\n\n            var shadowChildren = [];\n            var applicationWithPlugins = registeredPlugins.reduce(function (app, currentPlugin) {\n              var pluginResult = currentPlugin(_this6, factory.plugins, app);\n\n              if (!pluginResult) {\n                return app;\n              }\n\n              var _pluginResult = _slicedToArray(pluginResult, 2),\n                  wrapper = _pluginResult[0],\n                  shadowChild = _pluginResult[1];\n\n              if (shadowChild) {\n                shadowChildren.push(shadowChild);\n              }\n\n              return wrapper;\n            }, application);\n            return [applicationWithPlugins, shadowChildren];\n          }\n          /**\n           * Generate react props based on properties and attributes.\n           */\n\n        }, {\n          key: \"reactProps\",\n          value: function reactProps() {\n            this.syncronizePropertiesAndAttributes();\n            return this.properties;\n          }\n          /**\n           * Mount React App onto the Web Component\n           */\n\n        }, {\n          key: \"mountReactApp\",\n          value: function mountReactApp(options) {\n            var _this7 = this;\n\n            var _a;\n\n            var application = React.createElement(EventProvider, {\n              value: this.eventDispatcher\n            }, React.createElement(factory.rootComponent, this.reactProps()));\n\n            var _this$applyPlugins = this.applyPlugins(application),\n                _this$applyPlugins2 = _slicedToArray(_this$applyPlugins, 2),\n                applicationWithPlugins = _this$applyPlugins2[0],\n                shadowChildren = _this$applyPlugins2[1];\n\n            if (!factory.shadow) {\n              ReactDOM.render(applicationWithPlugins, this);\n              return;\n            }\n\n            var currentChildren;\n\n            if ((_a = options) === null || _a === void 0 ? void 0 : _a.initial) {\n              currentChildren = Array.from(this.children).map(function (child) {\n                return child.cloneNode(true);\n              });\n            }\n\n            var root = createProxyRoot(this, shadowChildren);\n            ReactDOM.render(React.createElement(root.open, null, applicationWithPlugins), this);\n\n            if (currentChildren) {\n              currentChildren.forEach(function (child) {\n                return _this7.append(child);\n              });\n            }\n          }\n        }], [{\n          key: \"observedAttributes\",\n          get: function get() {\n            return Object.keys(factory.componentAttributes).map(function (k) {\n              return k.toLowerCase();\n            });\n          }\n        }]);\n\n        return WebComponent;\n      }( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n    }\n  }]);\n\n  return WebComponentFactory;\n}();\n\nexport default WebComponentFactory;","map":{"version":3,"sources":["/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/direflow-component/dist/WebComponentFactory.js"],"names":["React","ReactDOM","clonedeep","createProxyRoot","EventProvider","registeredPlugins","WebComponentFactory","componentProperties","rootComponent","shadow","plugins","connectCallback","componentAttributes","reflectPropertiesToAttributes","Object","entries","forEach","key","value","factory","initialProperties","properties","hasConnected","eventDispatcher","event","dispatchEvent","transferInitialProperties","subscribeToProperties","_a","_b","mountReactApp","initial","call","name","oldValue","newValue","unmountComponentAtNode","propertyMap","keys","configurable","enumerable","get","currentValue","hasOwnProperty","set","propertyChangedCallback","defineProperties","getAttribute","application","shadowChildren","applicationWithPlugins","reduce","app","currentPlugin","pluginResult","wrapper","shadowChild","push","syncronizePropertiesAndAttributes","options","createElement","reactProps","applyPlugins","render","currentChildren","Array","from","children","map","child","cloneNode","root","open","append","k","toLowerCase","HTMLElement"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport clonedeep from 'lodash.clonedeep';\nimport createProxyRoot from './helpers/proxyRoot';\nimport { EventProvider } from './components/EventContext';\nimport registeredPlugins from './plugins/plugins';\nclass WebComponentFactory {\n    constructor(componentProperties, rootComponent, shadow, plugins, connectCallback) {\n        this.componentProperties = componentProperties;\n        this.rootComponent = rootComponent;\n        this.shadow = shadow;\n        this.plugins = plugins;\n        this.connectCallback = connectCallback;\n        this.componentAttributes = {};\n        this.reflectPropertiesToAttributes();\n    }\n    /**\n     * All properties with primitive values are added to attributes.\n     */\n    reflectPropertiesToAttributes() {\n        Object.entries(this.componentProperties).forEach(([key, value]) => {\n            if (typeof value !== 'number' && typeof value !== 'string' && typeof value !== 'boolean') {\n                return;\n            }\n            this.componentAttributes[key] = value;\n        });\n    }\n    /**\n     * Create new class that will serve as the Web Component.\n     */\n    create() {\n        const factory = this;\n        return class WebComponent extends HTMLElement {\n            constructor() {\n                super();\n                this.initialProperties = clonedeep(factory.componentProperties);\n                this.properties = {};\n                this.hasConnected = false;\n                /**\n                 * Dispatch an event from the Web Component\n                 */\n                this.eventDispatcher = (event) => {\n                    this.dispatchEvent(event);\n                };\n                this.transferInitialProperties();\n                this.subscribeToProperties();\n            }\n            /**\n             * Observe attributes for changes.\n             * Part of the Web Component Standard.\n             */\n            static get observedAttributes() {\n                return Object.keys(factory.componentAttributes).map((k) => k.toLowerCase());\n            }\n            /**\n             * Web Component gets mounted on the DOM.\n             */\n            connectedCallback() {\n                var _a, _b;\n                this.mountReactApp({ initial: true });\n                this.hasConnected = true;\n                (_b = (_a = factory).connectCallback) === null || _b === void 0 ? void 0 : _b.call(_a, this);\n            }\n            /**\n             * When an attribute is changed, this callback function is called.\n             * @param name name of the attribute\n             * @param oldValue value before change\n             * @param newValue value after change\n             */\n            attributeChangedCallback(name, oldValue, newValue) {\n                if (!this.hasConnected) {\n                    return;\n                }\n                if (oldValue === newValue) {\n                    return;\n                }\n                this.properties[name] = newValue;\n                this.mountReactApp();\n            }\n            /**\n             * When a property is changed, this callback function is called.\n             * @param name name of the property\n             * @param oldValue value before change\n             * @param newValue value after change\n             */\n            propertyChangedCallback(name, oldValue, newValue) {\n                if (!this.hasConnected) {\n                    return;\n                }\n                if (oldValue === newValue) {\n                    return;\n                }\n                this.properties[name] = newValue;\n                this.mountReactApp();\n            }\n            /**\n             * Web Component gets unmounted from the DOM.\n             */\n            disconnectedCallback() {\n                ReactDOM.unmountComponentAtNode(this);\n            }\n            /**\n             * Setup getters and setters for all properties.\n             * Here we ensure that the 'propertyChangedCallback' will get invoked\n             * when a property changes.\n             */\n            subscribeToProperties() {\n                const propertyMap = {};\n                Object.keys(this.initialProperties).forEach((key) => {\n                    propertyMap[key] = {\n                        configurable: true,\n                        enumerable: true,\n                        get: () => {\n                            const currentValue = this.properties.hasOwnProperty(key)\n                                ? this.properties[key]\n                                : this.initialProperties[key];\n                            return currentValue;\n                        },\n                        set: (newValue) => {\n                            const oldValue = this.properties.hasOwnProperty(key)\n                                ? this.properties[key]\n                                : this.initialProperties[key];\n                            this.propertyChangedCallback(key, oldValue, newValue);\n                        },\n                    };\n                });\n                Object.defineProperties(this, propertyMap);\n            }\n            /**\n             * Syncronize all properties and attributes\n             */\n            syncronizePropertiesAndAttributes() {\n                Object.keys(this.initialProperties).forEach((key) => {\n                    if (this.properties.hasOwnProperty(key)) {\n                        return;\n                    }\n                    if (this.getAttribute(key)) {\n                        this.properties[key] = this.getAttribute(key);\n                        return;\n                    }\n                    this.properties[key] = this.initialProperties[key];\n                });\n            }\n            /**\n             * Transfer initial properties from the custom element.\n             */\n            transferInitialProperties() {\n                Object.keys(this.initialProperties).forEach((key) => {\n                    if (this.hasOwnProperty(key)) {\n                        this.properties[key] = this[key];\n                    }\n                });\n            }\n            /**\n             * Apply plugins\n             */\n            applyPlugins(application) {\n                const shadowChildren = [];\n                const applicationWithPlugins = registeredPlugins.reduce((app, currentPlugin) => {\n                    const pluginResult = currentPlugin(this, factory.plugins, app);\n                    if (!pluginResult) {\n                        return app;\n                    }\n                    const [wrapper, shadowChild] = pluginResult;\n                    if (shadowChild) {\n                        shadowChildren.push(shadowChild);\n                    }\n                    return wrapper;\n                }, application);\n                return [applicationWithPlugins, shadowChildren];\n            }\n            /**\n             * Generate react props based on properties and attributes.\n             */\n            reactProps() {\n                this.syncronizePropertiesAndAttributes();\n                return this.properties;\n            }\n            /**\n             * Mount React App onto the Web Component\n             */\n            mountReactApp(options) {\n                var _a;\n                const application = (React.createElement(EventProvider, { value: this.eventDispatcher }, React.createElement(factory.rootComponent, this.reactProps())));\n                const [applicationWithPlugins, shadowChildren] = this.applyPlugins(application);\n                if (!factory.shadow) {\n                    ReactDOM.render(applicationWithPlugins, this);\n                    return;\n                }\n                let currentChildren;\n                if ((_a = options) === null || _a === void 0 ? void 0 : _a.initial) {\n                    currentChildren = Array.from(this.children).map((child) => child.cloneNode(true));\n                }\n                const root = createProxyRoot(this, shadowChildren);\n                ReactDOM.render(React.createElement(root.open, null, applicationWithPlugins), this);\n                if (currentChildren) {\n                    currentChildren.forEach((child) => this.append(child));\n                }\n            }\n        };\n    }\n}\nexport default WebComponentFactory;\n"]},"metadata":{},"sourceType":"module"}