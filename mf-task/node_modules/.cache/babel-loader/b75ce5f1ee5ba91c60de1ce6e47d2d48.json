{"ast":null,"code":"import _regeneratorRuntime from\"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import ListTask from'./lists';import ServicesTasks from'../../provider/services';import Add from'./add';import Detail from'./detail';import Edit from'./edit';import{TasksContext}from'../../provider/index';import{Grid}from'@material-ui/core';var Tasks=function Tasks(){var _React$useContext=React.useContext(TasksContext),updateData=_React$useContext.updateData;// function undoChanges() {\n//     updateData({} ,'UNDO');\n// }\nfunction loadData(){return _loadData.apply(this,arguments);}function _loadData(){_loadData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:updateData(true,'LOAD');ServicesTasks.getTask().then(function(res){updateData(res,'GET');updateData(false,'LOAD');}).catch(function(){updateData(true,'ERROR');});case 2:case\"end\":return _context.stop();}}},_callee);}));return _loadData.apply(this,arguments);}useEffect(function(){loadData();},[]);return/*#__PURE__*/React.createElement(TasksContext.Consumer,null,function(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Edit,null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Detail,null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Add,null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(ListTask,null))));});};export default Tasks;","map":{"version":3,"sources":["/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/src/direflow-components/mf-task/components/index.js"],"names":["React","useEffect","ListTask","ServicesTasks","Add","Detail","Edit","TasksContext","Grid","Tasks","useContext","updateData","loadData","getTask","then","res","catch"],"mappings":"iWAAA,MAAOA,CAAAA,KAAP,EAAiBC,SAAjB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,QAAP,KAAqB,SAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAAQC,YAAR,KAA2B,sBAA3B,CACA,OAAQC,IAAR,KAAmB,mBAAnB,CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,uBACOT,KAAK,CAACU,UAAN,CAAiBH,YAAjB,CADP,CACRI,UADQ,mBACRA,UADQ,CAGhB;AACA;AACA;AALgB,QAODC,CAAAA,QAPC,kIAOhB,mIACKD,UAAU,CAAC,IAAD,CAAO,MAAP,CAAV,CACDR,aAAa,CAACU,OAAd,GAAwBC,IAAxB,CAA6B,SAACC,GAAD,CAAS,CAClCJ,UAAU,CAACI,GAAD,CAAM,KAAN,CAAV,CACAJ,UAAU,CAAC,KAAD,CAAQ,MAAR,CAAV,CACH,CAHD,EAGGK,KAHH,CAGS,UAAM,CACXL,UAAU,CAAC,IAAD,CAAO,OAAP,CAAV,CACH,CALD,EAFJ,sDAPgB,2CAiBhBV,SAAS,CAAC,UAAM,CACZW,QAAQ,GACX,CAFQ,CAEN,EAFM,CAAT,CAGA,mBACI,oBAAC,YAAD,CAAc,QAAd,MACK,8BACF,4CACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,eACC,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACI,oBAAC,IAAD,MADJ,CADD,cAIC,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACI,oBAAC,MAAD,MADJ,CAJD,cAOC,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACI,oBAAC,GAAD,MADJ,CAPD,cAUC,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACI,oBAAC,QAAD,MADJ,CAVD,CADJ,CADE,EADL,CADJ,CAyBH,CA7CD,CAgDA,cAAeH,CAAAA,KAAf","sourcesContent":["import React , { useEffect } from 'react'\nimport ListTask from './lists'\nimport ServicesTasks from '../../provider/services'\nimport Add from './add'\nimport Detail from './detail'\nimport Edit from './edit'\nimport {TasksContext} from '../../provider/index'\nimport {Grid} from '@material-ui/core';\n\n\nconst Tasks = () => {\n    const { updateData } = React.useContext(TasksContext);\n\n    // function undoChanges() {\n    //     updateData({} ,'UNDO');\n    // }\n\n    async function loadData() {\n         updateData(true ,'LOAD');\n        ServicesTasks.getTask().then((res) => {\n            updateData(res, 'GET');\n            updateData(false ,'LOAD');\n        }).catch(() => {\n            updateData(true ,'ERROR');\n        })\n    }\n\n    useEffect(() => {\n        loadData()\n    }, [])\n    return (\n        <TasksContext.Consumer> \n            {()=>(   \n           <div>\n               <Grid container spacing={3}>\n                <Grid item xs={6}>\n                    <Edit />\n                </Grid>\n                <Grid item xs={6}>\n                    <Detail />\n                </Grid>\n                <Grid item xs={12}>\n                    <Add />\n                </Grid>\n                <Grid item xs={12}>\n                    <ListTask />\n                </Grid>\n                              \n            </Grid>\n                 \n           </div>\n         \n            )} \n        </TasksContext.Consumer>  \n    )\n};\n\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}