{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar asyncScriptLoader = function (src, bundleListKey) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = src;\n\n    if (!window[bundleListKey]) {\n      window[bundleListKey] = [];\n    }\n\n    var existingPolyfill = window[bundleListKey].find(function (loadedScript) {\n      return loadedScript.script.isEqualNode(script);\n    });\n\n    if (existingPolyfill) {\n      if (existingPolyfill.hasLoaded) {\n        resolve();\n      }\n\n      existingPolyfill.script.addEventListener('load', function () {\n        return resolve();\n      });\n      return;\n    }\n\n    var scriptEntry = {\n      script: script,\n      hasLoaded: false\n    };\n    window[bundleListKey].push(scriptEntry);\n    script.addEventListener('load', function () {\n      scriptEntry.hasLoaded = true;\n      resolve();\n    });\n    script.addEventListener('error', function () {\n      return reject(new Error('Polyfill failed to load'));\n    });\n    document.head.appendChild(script);\n  });\n};\n\nexports.default = asyncScriptLoader;","map":{"version":3,"sources":["/home/max-valeta/Documents/ALTO/react/container-mfs/public/mf-task/node_modules/direflow-scripts/dist/helpers/asyncScriptLoader.js"],"names":["Object","defineProperty","exports","value","asyncScriptLoader","src","bundleListKey","Promise","resolve","reject","script","document","createElement","async","window","existingPolyfill","find","loadedScript","isEqualNode","hasLoaded","addEventListener","scriptEntry","push","Error","head","appendChild","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,iBAAiB,GAAG,UAAUC,GAAV,EAAeC,aAAf,EAA8B;AAClD,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,KAAP,GAAe,IAAf;AACAH,IAAAA,MAAM,CAACL,GAAP,GAAaA,GAAb;;AACA,QAAI,CAACS,MAAM,CAACR,aAAD,CAAX,EAA4B;AACxBQ,MAAAA,MAAM,CAACR,aAAD,CAAN,GAAwB,EAAxB;AACH;;AACD,QAAIS,gBAAgB,GAAGD,MAAM,CAACR,aAAD,CAAN,CAAsBU,IAAtB,CAA2B,UAAUC,YAAV,EAAwB;AACtE,aAAOA,YAAY,CAACP,MAAb,CAAoBQ,WAApB,CAAgCR,MAAhC,CAAP;AACH,KAFsB,CAAvB;;AAGA,QAAIK,gBAAJ,EAAsB;AAClB,UAAIA,gBAAgB,CAACI,SAArB,EAAgC;AAC5BX,QAAAA,OAAO;AACV;;AACDO,MAAAA,gBAAgB,CAACL,MAAjB,CAAwBU,gBAAxB,CAAyC,MAAzC,EAAiD,YAAY;AAAE,eAAOZ,OAAO,EAAd;AAAmB,OAAlF;AACA;AACH;;AACD,QAAIa,WAAW,GAAG;AACdX,MAAAA,MAAM,EAAEA,MADM;AAEdS,MAAAA,SAAS,EAAE;AAFG,KAAlB;AAIAL,IAAAA,MAAM,CAACR,aAAD,CAAN,CAAsBgB,IAAtB,CAA2BD,WAA3B;AACAX,IAAAA,MAAM,CAACU,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxCC,MAAAA,WAAW,CAACF,SAAZ,GAAwB,IAAxB;AACAX,MAAAA,OAAO;AACV,KAHD;AAIAE,IAAAA,MAAM,CAACU,gBAAP,CAAwB,OAAxB,EAAiC,YAAY;AAAE,aAAOX,MAAM,CAAC,IAAIc,KAAJ,CAAU,yBAAV,CAAD,CAAb;AAAsD,KAArG;AACAZ,IAAAA,QAAQ,CAACa,IAAT,CAAcC,WAAd,CAA0Bf,MAA1B;AACH,GA5BM,CAAP;AA6BH,CA9BD;;AA+BAR,OAAO,CAACwB,OAAR,GAAkBtB,iBAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar asyncScriptLoader = function (src, bundleListKey) {\n    return new Promise(function (resolve, reject) {\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = src;\n        if (!window[bundleListKey]) {\n            window[bundleListKey] = [];\n        }\n        var existingPolyfill = window[bundleListKey].find(function (loadedScript) {\n            return loadedScript.script.isEqualNode(script);\n        });\n        if (existingPolyfill) {\n            if (existingPolyfill.hasLoaded) {\n                resolve();\n            }\n            existingPolyfill.script.addEventListener('load', function () { return resolve(); });\n            return;\n        }\n        var scriptEntry = {\n            script: script,\n            hasLoaded: false,\n        };\n        window[bundleListKey].push(scriptEntry);\n        script.addEventListener('load', function () {\n            scriptEntry.hasLoaded = true;\n            resolve();\n        });\n        script.addEventListener('error', function () { return reject(new Error('Polyfill failed to load')); });\n        document.head.appendChild(script);\n    });\n};\nexports.default = asyncScriptLoader;\n"]},"metadata":{},"sourceType":"script"}