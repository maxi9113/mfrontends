import React, { Component } from 'react';
import Style from '../helpers/styleInjector';
const Styled = (props) => {
    let styles;
    if (typeof props.styles === 'string') {
        styles = props.styles.toString();
    }
    else {
        styles = props.styles.reduce((acc, current) => `${acc} ${current}`);
    }
    return (React.createElement(Style, { scoped: props.scoped },
        styles,
        props.children));
};
const withStyles = (styles) => (WrappedComponent) => {
    // eslint-disable-next-line react/prefer-stateless-function
    return class extends Component {
        render() {
            return (React.createElement(Styled, { styles: styles },
                React.createElement("div", null,
                    React.createElement(WrappedComponent, Object.assign({}, this.props)))));
        }
    };
};
export { withStyles, Styled };
