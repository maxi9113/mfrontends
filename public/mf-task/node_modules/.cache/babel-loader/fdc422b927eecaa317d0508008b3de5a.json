{"ast":null,"code":"import _classCallCheck from \"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React, { Component, cloneElement, isValidElement } from 'react';\nimport adler32 from 'react-lib-adler32';\nvar isDevEnv = process.env.NODE_ENV !== 'production';\n\nvar Style = /*#__PURE__*/function (_Component) {\n  _inherits(Style, _Component);\n\n  var _super = _createSuper(Style);\n\n  function Style() {\n    var _this;\n\n    _classCallCheck(this, Style);\n\n    _this = _super.apply(this, arguments);\n    _this.scopeClassNameCache = {};\n    _this.scopedCSSTextCache = {};\n    _this.scoped = _this.props.scoped !== undefined ? _this.props.scoped : true;\n    _this.pepper = '';\n\n    _this.getStyleString = function () {\n      if (_this.props.children instanceof Array) {\n        var styleString = _this.props.children.filter(function (child) {\n          return !isValidElement(child) && typeof child === 'string';\n        });\n\n        if (styleString.length > 1) {\n          throw new Error(\"Multiple style objects as direct descedents of a\\n        Style component are not supported (\".concat(styleString.length, \" style objects detected):\\n\\n        \").concat(styleString[0], \"\\n        \"));\n        }\n\n        return styleString[0];\n      }\n\n      if (typeof _this.props.children === 'string' && !isValidElement(_this.props.children)) {\n        return _this.props.children;\n      }\n\n      return null;\n    };\n\n    _this.getRootElement = function () {\n      if (_this.props.children instanceof Array) {\n        var rootElement = _this.props.children.filter(function (child) {\n          return isValidElement(child);\n        });\n\n        if (isDevEnv) {\n          if (rootElement.length > 1) {\n            console.log(rootElement);\n            throw new Error(\"Adjacent JSX elements must be wrapped in an enclosing tag \\n          (\".concat(rootElement.length, \" root elements detected)\"));\n          }\n\n          if (typeof rootElement[0] !== 'undefined' && _this.isVoidElement(rootElement[0].type)) {\n            throw new Error(\"Self-closing void elements like \".concat(rootElement.type, \" must be \\n          wrapped in an enclosing tag. Reactive Style must be able to nest a style element inside of the \\n          root element and void element content models never \\n          allow it to have contents under any circumstances.\"));\n          }\n        }\n\n        return rootElement[0];\n      }\n\n      if (isValidElement(_this.props.children)) {\n        return _this.props.children;\n      }\n\n      return null;\n    };\n\n    _this.getRootSelectors = function (rootElement) {\n      var rootSelectors = [];\n\n      if (rootElement.props.id) {\n        rootSelectors.push(\"#\".concat(rootElement.props.id));\n      }\n\n      if (rootElement.props.className) {\n        rootElement.props.className.trim().split(/\\s+/g).forEach(function (className) {\n          return rootSelectors.push(className);\n        });\n      }\n\n      if (!rootSelectors.length && typeof rootElement.type !== 'function') {\n        rootSelectors.push(rootElement.type);\n      }\n\n      return rootSelectors;\n    };\n\n    _this.processCSSText = function (styleString, scopeClassName, rootSelectors) {\n      return styleString.replace(/\\s*\\/\\/(?![^(]*\\)).*|\\s*\\/\\*.*\\*\\//g, '').replace(/\\s\\s+/g, ' ').split('}').map(function (fragment) {\n        var isDeclarationBodyPattern = /.*:.*;/g;\n        var isLastItemDeclarationBodyPattern = /.*:.*(;|$|\\s+)/g;\n        var isAtRulePattern = /\\s*@/g;\n        var isKeyframeOffsetPattern = /\\s*(([0-9][0-9]?|100)\\s*%)|\\s*(to|from)\\s*$/g;\n        return fragment.split('{').map(function (statement, i, arr) {\n          if (!statement.trim().length) {\n            return '';\n          }\n\n          var isDeclarationBodyItemWithOptionalSemicolon = arr.length - 1 === i && statement.match(isLastItemDeclarationBodyPattern);\n\n          if (statement.match(isDeclarationBodyPattern) || isDeclarationBodyItemWithOptionalSemicolon) {\n            return _this.escapeTextContentForBrowser(statement);\n          }\n\n          var selector = statement;\n\n          if (scopeClassName && !/:target/gi.test(selector)) {\n            if (!selector.match(isAtRulePattern) && !selector.match(isKeyframeOffsetPattern)) {\n              return _this.scopeSelector(scopeClassName, selector, rootSelectors);\n            }\n\n            return selector;\n          }\n\n          return selector;\n        }).join('{\\n');\n      }).join('}\\n');\n    };\n\n    _this.escaper = function (match) {\n      var ESCAPE_LOOKUP = {\n        '>': '&gt;',\n        '<': '&lt;'\n      };\n      return ESCAPE_LOOKUP[match];\n    };\n\n    _this.escapeTextContentForBrowser = function (text) {\n      var ESCAPE_REGEX = /[><]/g;\n      return \"\".concat(text).replace(ESCAPE_REGEX, _this.escaper);\n    };\n\n    _this.scopeSelector = function (scopeClassName, selector, rootSelectors) {\n      var scopedSelector = [];\n      var groupOfSelectorsPattern = /,(?![^(|[]*\\)|\\])/g;\n      var selectors = selector.split(groupOfSelectorsPattern);\n      selectors.forEach(function (selectorElement) {\n        var _a, _b, _c;\n\n        var containsSelector;\n        var unionSelector;\n\n        if (((_a = rootSelectors) === null || _a === void 0 ? void 0 : _a.length) && rootSelectors.some(function (rootSelector) {\n          return selectorElement.match(rootSelector);\n        })) {\n          unionSelector = selectorElement;\n          var escapedRootSelectors = (_b = rootSelectors) === null || _b === void 0 ? void 0 : _b.map(function (rootSelector) {\n            return rootSelector.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n          });\n          unionSelector = unionSelector.replace(new RegExp(\"(\".concat((_c = escapedRootSelectors) === null || _c === void 0 ? void 0 : _c.join('|'), \")\")), \"$1\".concat(scopeClassName));\n          containsSelector = _this.scoped ? \"\".concat(scopeClassName, \" \").concat(selectorElement) : selectorElement;\n          scopedSelector.push(unionSelector, containsSelector);\n        } else {\n          containsSelector = _this.scoped ? \"\".concat(scopeClassName, \" \").concat(selectorElement) : selectorElement;\n          scopedSelector.push(containsSelector);\n        }\n      });\n\n      if (!_this.scoped && scopedSelector.length > 1) {\n        return scopedSelector[1];\n      }\n\n      return scopedSelector.join(', ');\n    };\n\n    _this.getScopeClassName = function (styleString, rootElement) {\n      var hash = styleString;\n\n      if (rootElement) {\n        _this.pepper = '';\n\n        _this.traverseObjectToGeneratePepper(rootElement);\n\n        hash += _this.pepper;\n      }\n\n      return (isDevEnv ? 'scope-' : 's') + adler32(hash);\n    };\n\n    _this.traverseObjectToGeneratePepper = function (obj) {\n      var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (depth > 32 || _this.pepper.length > 10000) return;\n      Object.keys(obj).forEach(function (prop) {\n        var isPropReactInternal = /^[_$]|type|ref|^value$/.test(prop);\n\n        if (!!obj[prop] && typeof obj[prop] === 'object' && !isPropReactInternal) {\n          _this.traverseObjectToGeneratePepper(obj[prop], depth + 1);\n        } else if (!!obj[prop] && !isPropReactInternal && typeof obj[prop] !== 'function') {\n          _this.pepper += obj[prop];\n        }\n      });\n    };\n\n    _this.isVoidElement = function (type) {\n      return ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'].some(function (voidType) {\n        return type === voidType;\n      });\n    };\n\n    _this.createStyleElement = function (cssText, scopeClassName) {\n      return React.createElement(\"style\", {\n        id: 'direflow_styles',\n        type: 'text/css',\n        key: scopeClassName,\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML: {\n          __html: cssText || ''\n        }\n      });\n    };\n\n    _this.getNewChildrenForCloneElement = function (cssText, rootElement, scopeClassName) {\n      return [_this.createStyleElement(cssText, scopeClassName)].concat(rootElement.props.children);\n    };\n\n    return _this;\n  }\n\n  _createClass(Style, [{\n    key: \"render\",\n    value: function render() {\n      var styleString = this.getStyleString();\n      var rootElement = this.getRootElement();\n\n      if (!styleString && rootElement) {\n        return rootElement.props.children;\n      }\n\n      if (styleString && !rootElement) {\n        return this.createStyleElement(this.processCSSText(styleString), this.getScopeClassName(styleString, rootElement));\n      }\n\n      var rootElementId = rootElement.props.id ? rootElement.props.id : '';\n      var rootElementClassNames = rootElement.props.className ? \"\".concat(rootElement.props.className, \" \") : '';\n      var scopeClassName;\n      var scopedCSSText;\n      var scopeClassNameAddress = rootElementClassNames + rootElementId + styleString;\n\n      if (this.scopeClassNameCache[scopeClassNameAddress]) {\n        scopeClassName = this.scopeClassNameCache[scopeClassNameAddress];\n        scopedCSSText = this.scopedCSSTextCache[scopeClassName];\n      } else {\n        scopeClassName = this.getScopeClassName(styleString, rootElement);\n        scopedCSSText = this.processCSSText(styleString, \".\".concat(scopeClassName), this.getRootSelectors(rootElement));\n        this.scopeClassNameCache[scopeClassNameAddress] = scopeClassName;\n        this.scopedCSSTextCache[scopeClassName] = scopedCSSText;\n      }\n\n      var className = this.scoped ? \"\".concat(rootElementClassNames).concat(scopeClassName) : rootElementClassNames;\n      return cloneElement(rootElement, Object.assign(Object.assign({}, rootElement.props), {\n        className: className.trim()\n      }), this.getNewChildrenForCloneElement(scopedCSSText, rootElement, scopeClassName));\n    }\n  }]);\n\n  return Style;\n}(Component);\n\nexport default Style;","map":{"version":3,"sources":["/home/max-valeta/Documents/ALTO/react/container-mfs/mf-task/node_modules/direflow-component/dist/helpers/styleInjector.js"],"names":["React","Component","cloneElement","isValidElement","adler32","isDevEnv","process","env","NODE_ENV","Style","arguments","scopeClassNameCache","scopedCSSTextCache","scoped","props","undefined","pepper","getStyleString","children","Array","styleString","filter","child","length","Error","getRootElement","rootElement","console","log","isVoidElement","type","getRootSelectors","rootSelectors","id","push","className","trim","split","forEach","processCSSText","scopeClassName","replace","map","fragment","isDeclarationBodyPattern","isLastItemDeclarationBodyPattern","isAtRulePattern","isKeyframeOffsetPattern","statement","i","arr","isDeclarationBodyItemWithOptionalSemicolon","match","escapeTextContentForBrowser","selector","test","scopeSelector","join","escaper","ESCAPE_LOOKUP","text","ESCAPE_REGEX","scopedSelector","groupOfSelectorsPattern","selectors","selectorElement","_a","_b","_c","containsSelector","unionSelector","some","rootSelector","escapedRootSelectors","RegExp","getScopeClassName","hash","traverseObjectToGeneratePepper","obj","depth","Object","keys","prop","isPropReactInternal","voidType","createStyleElement","cssText","createElement","key","dangerouslySetInnerHTML","__html","getNewChildrenForCloneElement","concat","rootElementId","rootElementClassNames","scopedCSSText","scopeClassNameAddress","assign"],"mappings":"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","sourcesContent":["import React, { Component, cloneElement, isValidElement } from 'react';\nimport adler32 from 'react-lib-adler32';\nconst isDevEnv = process.env.NODE_ENV !== 'production';\nclass Style extends Component {\n    constructor() {\n        super(...arguments);\n        this.scopeClassNameCache = {};\n        this.scopedCSSTextCache = {};\n        this.scoped = this.props.scoped !== undefined ? this.props.scoped : true;\n        this.pepper = '';\n        this.getStyleString = () => {\n            if (this.props.children instanceof Array) {\n                const styleString = this.props.children.filter((child) => !isValidElement(child) && typeof child === 'string');\n                if (styleString.length > 1) {\n                    throw new Error(`Multiple style objects as direct descedents of a\n        Style component are not supported (${styleString.length} style objects detected):\n\n        ${styleString[0]}\n        `);\n                }\n                return styleString[0];\n            }\n            if (typeof this.props.children === 'string' && !isValidElement(this.props.children)) {\n                return this.props.children;\n            }\n            return null;\n        };\n        this.getRootElement = () => {\n            if (this.props.children instanceof Array) {\n                const rootElement = this.props.children.filter((child) => isValidElement(child));\n                if (isDevEnv) {\n                    if (rootElement.length > 1) {\n                        console.log(rootElement);\n                        throw new Error(`Adjacent JSX elements must be wrapped in an enclosing tag \n          (${rootElement.length} root elements detected)`);\n                    }\n                    if (typeof rootElement[0] !== 'undefined' &&\n                        this.isVoidElement(rootElement[0].type)) {\n                        throw new Error(`Self-closing void elements like ${rootElement.type} must be \n          wrapped in an enclosing tag. Reactive Style must be able to nest a style element inside of the \n          root element and void element content models never \n          allow it to have contents under any circumstances.`);\n                    }\n                }\n                return rootElement[0];\n            }\n            if (isValidElement(this.props.children)) {\n                return this.props.children;\n            }\n            return null;\n        };\n        this.getRootSelectors = (rootElement) => {\n            const rootSelectors = [];\n            if (rootElement.props.id) {\n                rootSelectors.push(`#${rootElement.props.id}`);\n            }\n            if (rootElement.props.className) {\n                rootElement.props.className\n                    .trim()\n                    .split(/\\s+/g)\n                    .forEach((className) => rootSelectors.push(className));\n            }\n            if (!rootSelectors.length && typeof rootElement.type !== 'function') {\n                rootSelectors.push(rootElement.type);\n            }\n            return rootSelectors;\n        };\n        this.processCSSText = (styleString, scopeClassName, rootSelectors) => {\n            return styleString\n                .replace(/\\s*\\/\\/(?![^(]*\\)).*|\\s*\\/\\*.*\\*\\//g, '')\n                .replace(/\\s\\s+/g, ' ')\n                .split('}')\n                .map((fragment) => {\n                const isDeclarationBodyPattern = /.*:.*;/g;\n                const isLastItemDeclarationBodyPattern = /.*:.*(;|$|\\s+)/g;\n                const isAtRulePattern = /\\s*@/g;\n                const isKeyframeOffsetPattern = /\\s*(([0-9][0-9]?|100)\\s*%)|\\s*(to|from)\\s*$/g;\n                return fragment\n                    .split('{')\n                    .map((statement, i, arr) => {\n                    if (!statement.trim().length) {\n                        return '';\n                    }\n                    const isDeclarationBodyItemWithOptionalSemicolon = arr.length - 1 === i && statement.match(isLastItemDeclarationBodyPattern);\n                    if (statement.match(isDeclarationBodyPattern) ||\n                        isDeclarationBodyItemWithOptionalSemicolon) {\n                        return this.escapeTextContentForBrowser(statement);\n                    }\n                    const selector = statement;\n                    if (scopeClassName && !/:target/gi.test(selector)) {\n                        if (!selector.match(isAtRulePattern) && !selector.match(isKeyframeOffsetPattern)) {\n                            return this.scopeSelector(scopeClassName, selector, rootSelectors);\n                        }\n                        return selector;\n                    }\n                    return selector;\n                })\n                    .join('{\\n');\n            })\n                .join('}\\n');\n        };\n        this.escaper = (match) => {\n            const ESCAPE_LOOKUP = {\n                '>': '&gt;',\n                '<': '&lt;',\n            };\n            return ESCAPE_LOOKUP[match];\n        };\n        this.escapeTextContentForBrowser = (text) => {\n            const ESCAPE_REGEX = /[><]/g;\n            return `${text}`.replace(ESCAPE_REGEX, this.escaper);\n        };\n        this.scopeSelector = (scopeClassName, selector, rootSelectors) => {\n            const scopedSelector = [];\n            const groupOfSelectorsPattern = /,(?![^(|[]*\\)|\\])/g;\n            const selectors = selector.split(groupOfSelectorsPattern);\n            selectors.forEach((selectorElement) => {\n                var _a, _b, _c;\n                let containsSelector;\n                let unionSelector;\n                if (((_a = rootSelectors) === null || _a === void 0 ? void 0 : _a.length) &&\n                    rootSelectors.some((rootSelector) => selectorElement.match(rootSelector))) {\n                    unionSelector = selectorElement;\n                    const escapedRootSelectors = (_b = rootSelectors) === null || _b === void 0 ? void 0 : _b.map((rootSelector) => rootSelector.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n                    unionSelector = unionSelector.replace(new RegExp(`(${(_c = escapedRootSelectors) === null || _c === void 0 ? void 0 : _c.join('|')})`), `$1${scopeClassName}`);\n                    containsSelector = this.scoped ? `${scopeClassName} ${selectorElement}` : selectorElement;\n                    scopedSelector.push(unionSelector, containsSelector);\n                }\n                else {\n                    containsSelector = this.scoped ? `${scopeClassName} ${selectorElement}` : selectorElement;\n                    scopedSelector.push(containsSelector);\n                }\n            });\n            if (!this.scoped && scopedSelector.length > 1) {\n                return scopedSelector[1];\n            }\n            return scopedSelector.join(', ');\n        };\n        this.getScopeClassName = (styleString, rootElement) => {\n            let hash = styleString;\n            if (rootElement) {\n                this.pepper = '';\n                this.traverseObjectToGeneratePepper(rootElement);\n                hash += this.pepper;\n            }\n            return (isDevEnv ? 'scope-' : 's') + adler32(hash);\n        };\n        this.traverseObjectToGeneratePepper = (obj, depth = 0) => {\n            if (depth > 32 || this.pepper.length > 10000)\n                return;\n            Object.keys(obj).forEach((prop) => {\n                const isPropReactInternal = /^[_$]|type|ref|^value$/.test(prop);\n                if (!!obj[prop] && typeof obj[prop] === 'object' && !isPropReactInternal) {\n                    this.traverseObjectToGeneratePepper(obj[prop], depth + 1);\n                }\n                else if (!!obj[prop] && !isPropReactInternal && typeof obj[prop] !== 'function') {\n                    this.pepper += obj[prop];\n                }\n            });\n        };\n        this.isVoidElement = (type) => [\n            'area',\n            'base',\n            'br',\n            'col',\n            'command',\n            'embed',\n            'hr',\n            'img',\n            'input',\n            'keygen',\n            'link',\n            'meta',\n            'param',\n            'source',\n            'track',\n            'wbr',\n        ].some((voidType) => type === voidType);\n        this.createStyleElement = (cssText, scopeClassName) => {\n            return (React.createElement(\"style\", { id: 'direflow_styles', type: 'text/css', key: scopeClassName, \n                // eslint-disable-next-line react/no-danger\n                dangerouslySetInnerHTML: { __html: cssText || '' } }));\n        };\n        this.getNewChildrenForCloneElement = (cssText, rootElement, scopeClassName) => {\n            return [this.createStyleElement(cssText, scopeClassName)].concat(rootElement.props.children);\n        };\n    }\n    render() {\n        const styleString = this.getStyleString();\n        const rootElement = this.getRootElement();\n        if (!styleString && rootElement) {\n            return rootElement.props.children;\n        }\n        if (styleString && !rootElement) {\n            return this.createStyleElement(this.processCSSText(styleString), this.getScopeClassName(styleString, rootElement));\n        }\n        const rootElementId = rootElement.props.id ? rootElement.props.id : '';\n        const rootElementClassNames = rootElement.props.className\n            ? `${rootElement.props.className} `\n            : '';\n        let scopeClassName;\n        let scopedCSSText;\n        const scopeClassNameAddress = rootElementClassNames + rootElementId + styleString;\n        if (this.scopeClassNameCache[scopeClassNameAddress]) {\n            scopeClassName = this.scopeClassNameCache[scopeClassNameAddress];\n            scopedCSSText = this.scopedCSSTextCache[scopeClassName];\n        }\n        else {\n            scopeClassName = this.getScopeClassName(styleString, rootElement);\n            scopedCSSText = this.processCSSText(styleString, `.${scopeClassName}`, this.getRootSelectors(rootElement));\n            this.scopeClassNameCache[scopeClassNameAddress] = scopeClassName;\n            this.scopedCSSTextCache[scopeClassName] = scopedCSSText;\n        }\n        const className = this.scoped\n            ? `${rootElementClassNames}${scopeClassName}`\n            : rootElementClassNames;\n        return cloneElement(rootElement, Object.assign(Object.assign({}, rootElement.props), { className: className.trim() }), this.getNewChildrenForCloneElement(scopedCSSText, rootElement, scopeClassName));\n    }\n}\nexport default Style;\n"]},"metadata":{},"sourceType":"module"}